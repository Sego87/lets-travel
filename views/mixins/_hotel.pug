mixin hotel(hotel, searchQuery)
    //-with hotel(hotel) we named the mixin hotel and passed in the hotel data for each hotel from the database

    .hotel
        .hotel_img
            a(href=`/all/${hotel._id}`)
                //- `/all/${hereGoesTheDynamicSection}`
                //- img(src=`/images/hotels/${hotel.image}`) this was before uploading the images to the cloud
                img(src=`http://res.cloudinary.com/magicmike87/image/upload/${hotel.image}.jpg`)
        .hotel_info
            a(href=`/all/${hotel._id}`)
                h3=hotel.hotel_name
            //-h3 Hotel 1 this is a static data
            hr
            if url.startsWith('/all/')
                p=hotel.hotel_description
                hr
                //- the description and the horizontal line will be rendered just if we are in the '/all/' url. Note that they will be rendered just in the hotel detail page and not when all hotels are shown.In index.js we have '/all' and '/all/:hotel', which are not the same thing indeed.
            p= `Star rating: ${hotel.star_rating}`
            p= `Country: ${hotel.country}`
            p= `Cost per night: $ ${hotel.cost_per_night}`

            if url.startsWith('/all/')
                hr
                h3 Search for this hotel
                .search_nav
                    form(action="/results" method="POST")
                        //- when we submit this form we submit it to the /results route, it is a POST method
                        .input_wrapper
                            label(for="destination") Destination
                            input(type="text", id="destination", name="destination" value=hotel.hotel_name)
                            //- value=hotel.hotel_name is because the user doesn't need to do a specific search for a hotel since it is already in the detail page of the desired hotel, so this field it doesn't have to be required. It is just alredy filled in with the current hotel_name of the shown hotel
                        .input_wrapper
                            label(for="duration") Duration (nights)
                            input(type="number", id="duration", name="duration" required)
                        .input_wrapper
                            label(for="departure-date") Departure date
                            input(type="date", id="departure-date", name="dateOfDeparture" required)
                        .input_wrapper
                            label(for="number-guests") Number of guests
                            input(type="number", id="number-guests", name="numberOfGuests" required)

                        .input_wrapper
                            button(type="submit") SEARCH!
        
        if url === '/results'
            .hotel_order_details
                p= `Number of nights: ${searchQuery.duration}`
                p= `Departure date: ${searchQuery.dateOfDeparture}`
                - const costEach = searchQuery.duration * hotel.cost_per_night
                //-the duration is stored in searchQuery while the cost_per_night is stored in the hotel object in the database (cost_per_night is not an input from the user indeed)
                - const totalCost = costEach * searchQuery.numberOfGuests
                p= `Total per person: $ ${costEach}`
                hr
                p= `Total cost: $ ${totalCost}`