doctype html
html
  head
    title= title
    link(rel='stylesheet', href='/stylesheets/style.css')
  body
    //- header(style={display: "flex", color: grey})
    header
      nav
        a(href="/")
          img#logo(src="/images/logo.png")
        ul
          li
            a(href="/sign-up") sign up
          li
            a(href="/login") login
          li
            a(href="/logout") logout

      .search_nav
        form(action="/results" method="POST")
          //- when we submit this form we submit it to the /results route, it is a POST method
          .input_wrapper
            label(for="destination") Destination
            input(type="text", id="destination", name="destination" required)
          .input_wrapper
            label(for="duration") Duration (nights)
            input(type="number", id="duration", name="duration" required)
          .input_wrapper
            label(for="departure-date") Departure date
            input(type="date", id="departure-date", name="dateOfDeparture" required)
          .input_wrapper
            label(for="number-guests") Number of guests
            input(type="number", id="number-guests", name="numberOfGuests" required)

          .input_wrapper
            select(name="stars")
              option(value="1") Min 1 star
              option(value="2") Min 2 star
              option(value="3") Min 3 star
              option(value="4") Min 4 star
              option(value="5") Min 5 star

          .input_wrapper
            select(name="sort")
              option(value="1") Price: Low - High
              option(value="-1") Price: High - Low

          .input_wrapper
            button(type="submit") SEARCH!

      - const values = Object.values(flash)
      //- this will pass in flash messages which is an object, and use the .values method which returns an array of the object's property values. The values basically are the text strings that we show in the flash messages
      - const keys = Object.keys(flash)
      //- the keys are the message types that we want, we are going to create 3 (success, info, error)
      if keys.length > 0
        div(class=`message message_${keys}`)
          span= values
          span.close_btn(onclick="this.parentNode.remove()") &times;
          //- this provides a x which the user can click on to then remove the flash message (instead of &times; we could have used a normal x)
          //- onclick="this.parentNode.remove()" creates an event that when the user clicks on the x it will remove the parent node,IE the div parent, the flash message

      img(src="/images/beach.jpg")

      //- h1 Let's Travel
      //- div(id="extraSpace" style={flex:1})
      //- div(id="login")
      //-   a(href="") sign up
      //-   a(href="") log in
    //- p above the content
    block content
    //- p below the content
    //- this file doesn't have the "extends layout" at the top beacause this is the main template (indeed it is called "layout", which will be extended with other files). Everything in the "block content" will be pasted from other pug files that extend this main file
    //- #idName is used tu set an id for the object (see #logo)
    //- .search_nav automatically creates a div with a class called "search_nav"